C51 COMPILER V9.59.0.0   HAL_UART                                                          09/19/2018 08:04:13 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE HAL_UART
OBJECT MODULE PLACED IN .\Objects\hal_uart.obj
COMPILER INVOKED BY: D:\keil4\C51\BIN\C51.EXE ..\hal\hal_uart.c OPTIMIZE(9,SPEED) BROWSE INCDIR(..\app;..\port;..\task;.
                    -.\hal;..\osal) DEBUG OBJECTEXTEND PRINT(.\Listings\hal_uart.lst) TABS(2) OBJECT(.\Objects\hal_uart.obj)

line level    source

   1          #include <string.h>
   2          #include <stdlib.h>
   3          #include "hal_init.h"
   4          #include "hal_uart.h"
   5          
   6          typedef struct{
   7            unsigned char lock_flag;
   8            unsigned int len,send_cnt,buf_len;
   9            unsigned char *buf;
  10          }Tx_Buf_t;
  11          
  12          static XDATA Tx_Buf_t Tx_Buf[UART_SUM];
  13          static Hal_UartRx_Hdl_Cb_t Hal_UartRxHdl[UART_SUM];
  14          
  15          unsigned char Hal_UartInit(unsigned char id,unsigned char *buf,unsigned int buf_len)
  16          {
  17   1        if(id == UART0_ID){
  18   2          #ifdef UART0_ENABLE
  19   2          SCON=0x50;
  20   2          PCON|=0x80;
  21   2          T2CON&=~0x30;
  22   2          TMCON|=0x02;
  23   2          TMOD&=0x0f;
  24   2          TMOD|=0x20;
  25   2          TH1=256 - SYS_FRE_SET/BAURATE_SET/16/2*2;
  26   2          TR1=0;
  27   2          TR1=1;
  28   2          EUART=1;
  29   2          memset((void*)&Tx_Buf[UART0_ID],0,sizeof(Tx_Buf_t));
  30   2          Tx_Buf[UART0_ID].buf = buf;
  31   2          Tx_Buf[UART0_ID].buf_len = buf_len;
  32   2          SET_OUTPUT(P1, 3);
  33   2          UART0_TX_PORT = 1;
  34   2          return id;
  35   2          #endif
  36   2        }else if(id == UART1_ID){
  37   2          #ifdef UART1_ENABLE
                  unsigned int baud_set = 0;
                  OTCON = 0XC0;
                  SSCON0 = 0X50;
                  baud_set = (unsigned int)(SYS_FRE_SET/16/BAURATE_SET);
                  SSCON1 = baud_set%256;
                  SSCON2 = baud_set/256;
                  IE1 = 0x01;     
                  SET_OUTPUT(P2, 0);
                  UART1_TX_PORT = 1;
                  memset((void*)&Tx_Buf[UART1_ID],0,sizeof(Tx_Buf_t));
                  Tx_Buf[UART1_ID].buf = buf;
                  Tx_Buf[UART1_ID].buf_len = buf_len;
                  return id;
                  #endif
  52   2        }else{
  53   2          return 0XFF;
  54   2        }
C51 COMPILER V9.59.0.0   HAL_UART                                                          09/19/2018 08:04:13 PAGE 2   

  55   1        return 0XFF;
  56   1      }
  57          
  58          unsigned char Hal_UartSendBuf(unsigned char id,unsigned char *buf,unsigned int len){
  59   1        if(id == UART0_ID){ 
  60   2          #ifdef HAL_UART0_ENABLE
                  if(!Tx_Buf[UART0_ID].lock_flag){
                    if(len > Tx_Buf[UART0_ID].buf_len){
                      len = Tx_Buf[UART0_ID].buf_len;
                    }
                    memset((void*)&Tx_Buf[UART0_ID].buf[0],0,Tx_Buf[UART0_ID].buf_len);
                    memcpy((void*)&Tx_Buf[UART0_ID].buf[0],buf,len);
                    Tx_Buf[UART0_ID].len = len;
                    Tx_Buf[UART0_ID].lock_flag = True;
                    TI = 0;
                    SBUF = *buf;
                  }
                  #endif
  73   2        }else if(id == UART1_ID){
  74   2          #ifdef HAL_UART1_EANBLE
                  if(!Tx_Buf[UART1_ID].lock_flag){
                    if(len > Tx_Buf[UART1_ID].buf_len){
                      len = Tx_Buf[UART1_ID].buf_len;
                    }
                    memset((void*)&Tx_Buf[UART1_ID],0,sizeof(Tx_Buf_t));
                    memcpy(Tx_Buf[UART1_ID].buf,buf,len);
                    Tx_Buf[UART1_ID].len = len;
                    Tx_Buf[UART1_ID].lock_flag = True;
                    SSDAT = Tx_Buf.buf[0];
                  }
                  #endif
  86   2        }
  87   1        return SUCCEED;
  88   1      }
*** WARNING C280 IN LINE 58 OF ..\hal\hal_uart.c: 'buf': unreferenced local variable
*** WARNING C280 IN LINE 58 OF ..\hal\hal_uart.c: 'len': unreferenced local variable
  89          
  90          unsigned char Hal_RegUartRxHdl(unsigned char id,Hal_UartRx_Hdl_Cb_t cb)
  91          {
  92   1        if(id > UART_SUM || !cb){
  93   2          return PARA_ERROR;
  94   2        }
  95   1        Hal_UartRxHdl[id] = cb;
  96   1        return SUCCEED;
  97   1      }
  98          
  99          void Hal_Uart0IntHdl() interrupt 4
 100          {
 101   1        if(TI){
 102   2          TI=0;   
 103   2          if(Tx_Buf[UART0_ID].send_cnt == Tx_Buf[UART0_ID].len - 1){
 104   3            Tx_Buf[UART0_ID].lock_flag = False;
 105   3            memset((void*)&Tx_Buf[UART0_ID].buf[0],0,Tx_Buf[UART0_ID].len);
 106   3            Tx_Buf[UART0_ID].len = Tx_Buf[UART0_ID].send_cnt = 0;
 107   3            UART0_TX_PORT = 1;
 108   3            return ;
 109   3          } 
 110   2          SBUF = Tx_Buf[UART0_ID].buf[++Tx_Buf[UART0_ID].send_cnt]; 
 111   2        }
 112   1        
 113   1        if(RI){
 114   2          RI = 0;
C51 COMPILER V9.59.0.0   HAL_UART                                                          09/19/2018 08:04:13 PAGE 3   

 115   2          if(Hal_UartRxHdl[UART0_ID]){
 116   3            Hal_UartRxHdl[UART0_ID]();
 117   3          }
 118   2        }
 119   1      }
 120          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    316    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     10    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
